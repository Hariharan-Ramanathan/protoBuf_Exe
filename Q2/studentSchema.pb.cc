// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studentSchema.proto

#include "studentSchema.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Q2 {
constexpr student_guideBy::student_guideBy(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gtype_(0)

  , ptype_(0)
{}
struct student_guideByDefaultTypeInternal {
  constexpr student_guideByDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~student_guideByDefaultTypeInternal() {}
  union {
    student_guideBy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT student_guideByDefaultTypeInternal _student_guideBy_default_instance_;
constexpr student_semesterDetails_Marks::student_semesterDetails_Marks(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subjectname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , score_(0){}
struct student_semesterDetails_MarksDefaultTypeInternal {
  constexpr student_semesterDetails_MarksDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~student_semesterDetails_MarksDefaultTypeInternal() {}
  union {
    student_semesterDetails_Marks _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT student_semesterDetails_MarksDefaultTypeInternal _student_semesterDetails_Marks_default_instance_;
constexpr student_semesterDetails::student_semesterDetails(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : marks_()
  , number_(0){}
struct student_semesterDetailsDefaultTypeInternal {
  constexpr student_semesterDetailsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~student_semesterDetailsDefaultTypeInternal() {}
  union {
    student_semesterDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT student_semesterDetailsDefaultTypeInternal _student_semesterDetails_default_instance_;
constexpr student::student(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guide_by_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sec_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , semester_details_(nullptr)
  , rollnum_(0)
  , class__(0){}
struct studentDefaultTypeInternal {
  constexpr studentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~studentDefaultTypeInternal() {}
  union {
    student _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT studentDefaultTypeInternal _student_default_instance_;
constexpr allStudents::allStudents(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : all_student_(){}
struct allStudentsDefaultTypeInternal {
  constexpr allStudentsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~allStudentsDefaultTypeInternal() {}
  union {
    allStudents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT allStudentsDefaultTypeInternal _allStudents_default_instance_;
}  // namespace Q2
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_studentSchema_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_studentSchema_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_studentSchema_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_studentSchema_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Q2::student_guideBy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Q2::student_guideBy, number_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_guideBy, name_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_guideBy, gtype_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_guideBy, ptype_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails_Marks, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails_Marks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails_Marks, subjectname_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails_Marks, score_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails, number_),
  PROTOBUF_FIELD_OFFSET(::Q2::student_semesterDetails, marks_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::Q2::student, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Q2::student, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Q2::student, name_),
  PROTOBUF_FIELD_OFFSET(::Q2::student, rollnum_),
  PROTOBUF_FIELD_OFFSET(::Q2::student, class__),
  PROTOBUF_FIELD_OFFSET(::Q2::student, sec_),
  PROTOBUF_FIELD_OFFSET(::Q2::student, guide_by_),
  PROTOBUF_FIELD_OFFSET(::Q2::student, semester_details_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Q2::allStudents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Q2::allStudents, all_student_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Q2::student_guideBy)},
  { 9, 16, sizeof(::Q2::student_semesterDetails_Marks)},
  { 18, 25, sizeof(::Q2::student_semesterDetails)},
  { 27, 38, sizeof(::Q2::student)},
  { 44, -1, sizeof(::Q2::allStudents)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Q2::_student_guideBy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Q2::_student_semesterDetails_Marks_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Q2::_student_semesterDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Q2::_student_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Q2::_allStudents_default_instance_),
};

const char descriptor_table_protodef_studentSchema_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023studentSchema.proto\022\002Q2\"\250\004\n\007student\022\014\n"
  "\004name\030\001 \001(\t\022\017\n\007rollNum\030\002 \001(\005\022\r\n\005class\030\003 "
  "\001(\005\022\013\n\003sec\030\004 \001(\t\022%\n\010guide_by\030\005 \003(\0132\023.Q2."
  "student.guideBy\022:\n\020semester_details\030\006 \001("
  "\0132\033.Q2.student.semesterDetailsH\000\210\001\001\032m\n\007g"
  "uideBy\022\016\n\006number\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022 \n\005"
  "gType\030\003 \001(\0162\021.Q2.student.guide\022\"\n\005pType\030"
  "\004 \001(\0162\023.Q2.student.parents\032\264\001\n\017semesterD"
  "etails\022\023\n\006number\030\001 \001(\005H\000\210\001\001\0220\n\005marks\030\002 \003"
  "(\0132!.Q2.student.semesterDetails.Marks\032O\n"
  "\005Marks\022\030\n\013subjectName\030\001 \001(\tH\000\210\001\001\022\022\n\005scor"
  "e\030\002 \001(\005H\001\210\001\001B\016\n\014_subjectNameB\010\n\006_scoreB\t"
  "\n\007_number\"!\n\005guide\022\n\n\006PARENT\020\000\022\014\n\010GUARDI"
  "AN\020\001\"!\n\007parents\022\n\n\006FATHER\020\000\022\n\n\006MOTHER\020\001B"
  "\023\n\021_semester_details\"/\n\013allStudents\022 \n\013a"
  "ll_student\030\001 \003(\0132\013.Q2.studentb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_studentSchema_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_studentSchema_2eproto = {
  false, false, 637, descriptor_table_protodef_studentSchema_2eproto, "studentSchema.proto", 
  &descriptor_table_studentSchema_2eproto_once, nullptr, 0, 5,
  schemas, file_default_instances, TableStruct_studentSchema_2eproto::offsets,
  file_level_metadata_studentSchema_2eproto, file_level_enum_descriptors_studentSchema_2eproto, file_level_service_descriptors_studentSchema_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_studentSchema_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_studentSchema_2eproto);
  return descriptor_table_studentSchema_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_studentSchema_2eproto(&descriptor_table_studentSchema_2eproto);
namespace Q2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* student_guide_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_studentSchema_2eproto);
  return file_level_enum_descriptors_studentSchema_2eproto[0];
}
bool student_guide_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr student_guide student::PARENT;
constexpr student_guide student::GUARDIAN;
constexpr student_guide student::guide_MIN;
constexpr student_guide student::guide_MAX;
constexpr int student::guide_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* student_parents_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_studentSchema_2eproto);
  return file_level_enum_descriptors_studentSchema_2eproto[1];
}
bool student_parents_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr student_parents student::FATHER;
constexpr student_parents student::MOTHER;
constexpr student_parents student::parents_MIN;
constexpr student_parents student::parents_MAX;
constexpr int student::parents_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class student_guideBy::_Internal {
 public:
};

student_guideBy::student_guideBy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Q2.student.guideBy)
}
student_guideBy::student_guideBy(const student_guideBy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_number().empty()) {
    number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_number(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  ::memcpy(&gtype_, &from.gtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ptype_) -
    reinterpret_cast<char*>(&gtype_)) + sizeof(ptype_));
  // @@protoc_insertion_point(copy_constructor:Q2.student.guideBy)
}

void student_guideBy::SharedCtor() {
number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&gtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ptype_) -
    reinterpret_cast<char*>(&gtype_)) + sizeof(ptype_));
}

student_guideBy::~student_guideBy() {
  // @@protoc_insertion_point(destructor:Q2.student.guideBy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void student_guideBy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void student_guideBy::ArenaDtor(void* object) {
  student_guideBy* _this = reinterpret_cast< student_guideBy* >(object);
  (void)_this;
}
void student_guideBy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void student_guideBy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void student_guideBy::Clear() {
// @@protoc_insertion_point(message_clear_start:Q2.student.guideBy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&gtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ptype_) -
      reinterpret_cast<char*>(&gtype_)) + sizeof(ptype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* student_guideBy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Q2.student.guideBy.number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Q2.student.guideBy.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Q2.student.guide gType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_gtype(static_cast<::Q2::student_guide>(val));
        } else goto handle_unusual;
        continue;
      // .Q2.student.parents pType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ptype(static_cast<::Q2::student_parents>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* student_guideBy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Q2.student.guideBy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string number = 1;
  if (this->number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Q2.student.guideBy.number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_number(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Q2.student.guideBy.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .Q2.student.guide gType = 3;
  if (this->gtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_gtype(), target);
  }

  // .Q2.student.parents pType = 4;
  if (this->ptype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_ptype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Q2.student.guideBy)
  return target;
}

size_t student_guideBy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Q2.student.guideBy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string number = 1;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .Q2.student.guide gType = 3;
  if (this->gtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_gtype());
  }

  // .Q2.student.parents pType = 4;
  if (this->ptype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ptype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void student_guideBy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Q2.student.guideBy)
  GOOGLE_DCHECK_NE(&from, this);
  const student_guideBy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<student_guideBy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Q2.student.guideBy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Q2.student.guideBy)
    MergeFrom(*source);
  }
}

void student_guideBy::MergeFrom(const student_guideBy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Q2.student.guideBy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number().size() > 0) {
    _internal_set_number(from._internal_number());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.gtype() != 0) {
    _internal_set_gtype(from._internal_gtype());
  }
  if (from.ptype() != 0) {
    _internal_set_ptype(from._internal_ptype());
  }
}

void student_guideBy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Q2.student.guideBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void student_guideBy::CopyFrom(const student_guideBy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Q2.student.guideBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool student_guideBy::IsInitialized() const {
  return true;
}

void student_guideBy::InternalSwap(student_guideBy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  number_.Swap(&other->number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(student_guideBy, ptype_)
      + sizeof(student_guideBy::ptype_)
      - PROTOBUF_FIELD_OFFSET(student_guideBy, gtype_)>(
          reinterpret_cast<char*>(&gtype_),
          reinterpret_cast<char*>(&other->gtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata student_guideBy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class student_semesterDetails_Marks::_Internal {
 public:
  using HasBits = decltype(std::declval<student_semesterDetails_Marks>()._has_bits_);
  static void set_has_subjectname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_score(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

student_semesterDetails_Marks::student_semesterDetails_Marks(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Q2.student.semesterDetails.Marks)
}
student_semesterDetails_Marks::student_semesterDetails_Marks(const student_semesterDetails_Marks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subjectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_subjectname()) {
    subjectname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subjectname(), 
      GetArena());
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:Q2.student.semesterDetails.Marks)
}

void student_semesterDetails_Marks::SharedCtor() {
subjectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
score_ = 0;
}

student_semesterDetails_Marks::~student_semesterDetails_Marks() {
  // @@protoc_insertion_point(destructor:Q2.student.semesterDetails.Marks)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void student_semesterDetails_Marks::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subjectname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void student_semesterDetails_Marks::ArenaDtor(void* object) {
  student_semesterDetails_Marks* _this = reinterpret_cast< student_semesterDetails_Marks* >(object);
  (void)_this;
}
void student_semesterDetails_Marks::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void student_semesterDetails_Marks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void student_semesterDetails_Marks::Clear() {
// @@protoc_insertion_point(message_clear_start:Q2.student.semesterDetails.Marks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    subjectname_.ClearNonDefaultToEmpty();
  }
  score_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* student_semesterDetails_Marks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subjectName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subjectname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Q2.student.semesterDetails.Marks.subjectName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_score(&has_bits);
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* student_semesterDetails_Marks::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Q2.student.semesterDetails.Marks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subjectName = 1;
  if (_internal_has_subjectname()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subjectname().data(), static_cast<int>(this->_internal_subjectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Q2.student.semesterDetails.Marks.subjectName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subjectname(), target);
  }

  // int32 score = 2;
  if (_internal_has_score()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Q2.student.semesterDetails.Marks)
  return target;
}

size_t student_semesterDetails_Marks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Q2.student.semesterDetails.Marks)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // string subjectName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_subjectname());
    }

    // int32 score = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_score());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void student_semesterDetails_Marks::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Q2.student.semesterDetails.Marks)
  GOOGLE_DCHECK_NE(&from, this);
  const student_semesterDetails_Marks* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<student_semesterDetails_Marks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Q2.student.semesterDetails.Marks)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Q2.student.semesterDetails.Marks)
    MergeFrom(*source);
  }
}

void student_semesterDetails_Marks::MergeFrom(const student_semesterDetails_Marks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Q2.student.semesterDetails.Marks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_subjectname(from._internal_subjectname());
    }
    if (cached_has_bits & 0x00000002u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void student_semesterDetails_Marks::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Q2.student.semesterDetails.Marks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void student_semesterDetails_Marks::CopyFrom(const student_semesterDetails_Marks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Q2.student.semesterDetails.Marks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool student_semesterDetails_Marks::IsInitialized() const {
  return true;
}

void student_semesterDetails_Marks::InternalSwap(student_semesterDetails_Marks* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  subjectname_.Swap(&other->subjectname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata student_semesterDetails_Marks::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class student_semesterDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<student_semesterDetails>()._has_bits_);
  static void set_has_number(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

student_semesterDetails::student_semesterDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  marks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Q2.student.semesterDetails)
}
student_semesterDetails::student_semesterDetails(const student_semesterDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      marks_(from.marks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:Q2.student.semesterDetails)
}

void student_semesterDetails::SharedCtor() {
number_ = 0;
}

student_semesterDetails::~student_semesterDetails() {
  // @@protoc_insertion_point(destructor:Q2.student.semesterDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void student_semesterDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void student_semesterDetails::ArenaDtor(void* object) {
  student_semesterDetails* _this = reinterpret_cast< student_semesterDetails* >(object);
  (void)_this;
}
void student_semesterDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void student_semesterDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void student_semesterDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:Q2.student.semesterDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  marks_.Clear();
  number_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* student_semesterDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_number(&has_bits);
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Q2.student.semesterDetails.Marks marks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_marks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* student_semesterDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Q2.student.semesterDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (_internal_has_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_number(), target);
  }

  // repeated .Q2.student.semesterDetails.Marks marks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_marks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_marks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Q2.student.semesterDetails)
  return target;
}

size_t student_semesterDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Q2.student.semesterDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Q2.student.semesterDetails.Marks marks = 2;
  total_size += 1UL * this->_internal_marks_size();
  for (const auto& msg : this->marks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 number = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void student_semesterDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Q2.student.semesterDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const student_semesterDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<student_semesterDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Q2.student.semesterDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Q2.student.semesterDetails)
    MergeFrom(*source);
  }
}

void student_semesterDetails::MergeFrom(const student_semesterDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Q2.student.semesterDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  marks_.MergeFrom(from.marks_);
  if (from._internal_has_number()) {
    _internal_set_number(from._internal_number());
  }
}

void student_semesterDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Q2.student.semesterDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void student_semesterDetails::CopyFrom(const student_semesterDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Q2.student.semesterDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool student_semesterDetails::IsInitialized() const {
  return true;
}

void student_semesterDetails::InternalSwap(student_semesterDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  marks_.InternalSwap(&other->marks_);
  swap(number_, other->number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata student_semesterDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class student::_Internal {
 public:
  using HasBits = decltype(std::declval<student>()._has_bits_);
  static const ::Q2::student_semesterDetails& semester_details(const student* msg);
  static void set_has_semester_details(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Q2::student_semesterDetails&
student::_Internal::semester_details(const student* msg) {
  return *msg->semester_details_;
}
student::student(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  guide_by_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Q2.student)
}
student::student(const student& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      guide_by_(from.guide_by_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  sec_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sec().empty()) {
    sec_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sec(), 
      GetArena());
  }
  if (from._internal_has_semester_details()) {
    semester_details_ = new ::Q2::student_semesterDetails(*from.semester_details_);
  } else {
    semester_details_ = nullptr;
  }
  ::memcpy(&rollnum_, &from.rollnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&class__) -
    reinterpret_cast<char*>(&rollnum_)) + sizeof(class__));
  // @@protoc_insertion_point(copy_constructor:Q2.student)
}

void student::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sec_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&semester_details_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&class__) -
    reinterpret_cast<char*>(&semester_details_)) + sizeof(class__));
}

student::~student() {
  // @@protoc_insertion_point(destructor:Q2.student)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void student::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sec_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete semester_details_;
}

void student::ArenaDtor(void* object) {
  student* _this = reinterpret_cast< student* >(object);
  (void)_this;
}
void student::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void student::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void student::Clear() {
// @@protoc_insertion_point(message_clear_start:Q2.student)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guide_by_.Clear();
  name_.ClearToEmpty();
  sec_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (GetArena() == nullptr && semester_details_ != nullptr) {
      delete semester_details_;
    }
    semester_details_ = nullptr;
  }
  ::memset(&rollnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class__) -
      reinterpret_cast<char*>(&rollnum_)) + sizeof(class__));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* student::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Q2.student.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rollNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rollnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 class = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          class__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sec = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sec();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Q2.student.sec"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Q2.student.guideBy guide_by = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guide_by(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .Q2.student.semesterDetails semester_details = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_semester_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* student::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Q2.student)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Q2.student.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 rollNum = 2;
  if (this->rollnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rollnum(), target);
  }

  // int32 class = 3;
  if (this->class_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_class_(), target);
  }

  // string sec = 4;
  if (this->sec().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sec().data(), static_cast<int>(this->_internal_sec().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Q2.student.sec");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sec(), target);
  }

  // repeated .Q2.student.guideBy guide_by = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guide_by_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_guide_by(i), target, stream);
  }

  // .Q2.student.semesterDetails semester_details = 6;
  if (_internal_has_semester_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::semester_details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Q2.student)
  return target;
}

size_t student::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Q2.student)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Q2.student.guideBy guide_by = 5;
  total_size += 1UL * this->_internal_guide_by_size();
  for (const auto& msg : this->guide_by_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string sec = 4;
  if (this->sec().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sec());
  }

  // .Q2.student.semesterDetails semester_details = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *semester_details_);
  }

  // int32 rollNum = 2;
  if (this->rollnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rollnum());
  }

  // int32 class = 3;
  if (this->class_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void student::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Q2.student)
  GOOGLE_DCHECK_NE(&from, this);
  const student* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<student>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Q2.student)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Q2.student)
    MergeFrom(*source);
  }
}

void student::MergeFrom(const student& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Q2.student)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guide_by_.MergeFrom(from.guide_by_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.sec().size() > 0) {
    _internal_set_sec(from._internal_sec());
  }
  if (from._internal_has_semester_details()) {
    _internal_mutable_semester_details()->::Q2::student_semesterDetails::MergeFrom(from._internal_semester_details());
  }
  if (from.rollnum() != 0) {
    _internal_set_rollnum(from._internal_rollnum());
  }
  if (from.class_() != 0) {
    _internal_set_class_(from._internal_class_());
  }
}

void student::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Q2.student)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void student::CopyFrom(const student& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Q2.student)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool student::IsInitialized() const {
  return true;
}

void student::InternalSwap(student* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guide_by_.InternalSwap(&other->guide_by_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sec_.Swap(&other->sec_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(student, class__)
      + sizeof(student::class__)
      - PROTOBUF_FIELD_OFFSET(student, semester_details_)>(
          reinterpret_cast<char*>(&semester_details_),
          reinterpret_cast<char*>(&other->semester_details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata student::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class allStudents::_Internal {
 public:
};

allStudents::allStudents(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  all_student_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Q2.allStudents)
}
allStudents::allStudents(const allStudents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      all_student_(from.all_student_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Q2.allStudents)
}

void allStudents::SharedCtor() {
}

allStudents::~allStudents() {
  // @@protoc_insertion_point(destructor:Q2.allStudents)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void allStudents::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void allStudents::ArenaDtor(void* object) {
  allStudents* _this = reinterpret_cast< allStudents* >(object);
  (void)_this;
}
void allStudents::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void allStudents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void allStudents::Clear() {
// @@protoc_insertion_point(message_clear_start:Q2.allStudents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_student_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* allStudents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Q2.student all_student = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_all_student(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* allStudents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Q2.allStudents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Q2.student all_student = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_all_student_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_all_student(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Q2.allStudents)
  return target;
}

size_t allStudents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Q2.allStudents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Q2.student all_student = 1;
  total_size += 1UL * this->_internal_all_student_size();
  for (const auto& msg : this->all_student_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void allStudents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Q2.allStudents)
  GOOGLE_DCHECK_NE(&from, this);
  const allStudents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<allStudents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Q2.allStudents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Q2.allStudents)
    MergeFrom(*source);
  }
}

void allStudents::MergeFrom(const allStudents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Q2.allStudents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_student_.MergeFrom(from.all_student_);
}

void allStudents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Q2.allStudents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allStudents::CopyFrom(const allStudents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Q2.allStudents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allStudents::IsInitialized() const {
  return true;
}

void allStudents::InternalSwap(allStudents* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  all_student_.InternalSwap(&other->all_student_);
}

::PROTOBUF_NAMESPACE_ID::Metadata allStudents::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Q2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Q2::student_guideBy* Arena::CreateMaybeMessage< ::Q2::student_guideBy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Q2::student_guideBy >(arena);
}
template<> PROTOBUF_NOINLINE ::Q2::student_semesterDetails_Marks* Arena::CreateMaybeMessage< ::Q2::student_semesterDetails_Marks >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Q2::student_semesterDetails_Marks >(arena);
}
template<> PROTOBUF_NOINLINE ::Q2::student_semesterDetails* Arena::CreateMaybeMessage< ::Q2::student_semesterDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Q2::student_semesterDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::Q2::student* Arena::CreateMaybeMessage< ::Q2::student >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Q2::student >(arena);
}
template<> PROTOBUF_NOINLINE ::Q2::allStudents* Arena::CreateMaybeMessage< ::Q2::allStudents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Q2::allStudents >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
